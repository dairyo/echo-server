// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "echo server",
    "version": "0.0.1"
  },
  "paths": {
    "/board": {
      "get": {
        "tags": [
          "board"
        ],
        "summary": "get list of message in a board.",
        "operationId": "ListMessage",
        "responses": {
          "200": {
            "description": "messages successfully listed.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "id",
                  "message"
                ],
                "properties": {
                  "id": {
                    "type": "integer"
                  },
                  "message": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "server error.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "post a message to a board.",
        "tags": [
          "board"
        ],
        "summary": "post a message to a board.",
        "operationId": "PostMessage",
        "parameters": [
          {
            "name": "massage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "message is successfully stored."
          },
          "500": {
            "description": "server error.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/echo": {
      "post": {
        "description": "echo.",
        "summary": "echo.",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return the message.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/hello": {
      "get": {
        "description": "returning hello world for test.",
        "summary": "returning hello world.",
        "responses": {
          "200": {
            "description": "return hellow world.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "swagger": "2.0",
  "info": {
    "title": "echo server",
    "version": "0.0.1"
  },
  "paths": {
    "/board": {
      "get": {
        "tags": [
          "board"
        ],
        "summary": "get list of message in a board.",
        "operationId": "ListMessage",
        "responses": {
          "200": {
            "description": "messages successfully listed.",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ListMessageOKBodyItems0"
              }
            }
          },
          "500": {
            "description": "server error.",
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "post": {
        "description": "post a message to a board.",
        "tags": [
          "board"
        ],
        "summary": "post a message to a board.",
        "operationId": "PostMessage",
        "parameters": [
          {
            "name": "massage",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "message"
              ],
              "properties": {
                "message": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "message is successfully stored."
          },
          "500": {
            "description": "server error.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/echo": {
      "post": {
        "description": "echo.",
        "summary": "echo.",
        "parameters": [
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "return the message.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/hello": {
      "get": {
        "description": "returning hello world for test.",
        "summary": "returning hello world.",
        "responses": {
          "200": {
            "description": "return hellow world.",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ListMessageOKBodyItems0": {
      "type": "object",
      "required": [
        "id",
        "message"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}`))
}
